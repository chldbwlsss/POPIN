<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.summer.popin.domain.member.dao.MemberMapper">
    <select id="findProfileByMemberNo" resultType="ProfileResponseDTO">   <!-- 특정 멤버 프로필 조회 -->
        select
            m.no as memberNo, name, email, phone_Number as phoneNumber, introduction, mc.class as className, email_Certificated as emailCertificated,
            phone_Certificated as phoneCertificated, extract(year from join_date) as joinYear
        from member m left outer join member_class mc on m.class_code = mc.no
        where m.no = #{memberNo}
    </select>
    <select id="findMemberProfileByMemberNo" resultType="MemberProfileResponseDTO">
        select
            no as memberNo, name, introduction, email_Certificated as emailCertificated, phone_Certificated as phoneCertificated,
            extract(year from join_date) as joinYear
        from member
        where no = #{memberNo}
    </select>

    <select id="findEditProfileFormDataByMemberNo" resultType="ProfileUpdateDTO">
        select
            no, name, email, introduction, phone_number as phoneNumber
        from member
        where no = #{no}
    </select>

    <update id="updateProfileByMemberNo">
        update
            member
        set introduction = #{introduction, jdbcType=VARCHAR}, phone_number = #{phoneNumber, jdbcType=VARCHAR}
        where no = #{no}
    </update>

    <select id="findMemberById" resultType="LoginMemberInfoDTO">
        select m.no, id, name as nickname, email, mc.class as role
        from member m left join member_class mc on m.class_code = mc.no
        where id = #{id}
    </select>

    <insert id="saveMember">
        insert into member (no, id, name, email)
        values (seq_member.nextval, #{id}, #{nickname}, <if test="email != null">#{email}</if>
                    <if test="email == null">null</if>)
    </insert>

    <update id="updateMember">
        update
            member
        set name = #{nickname}, email = #{email}
        where id = #{id}
    </update>
</mapper>